// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: orders.proto

package coin

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text               string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	AmendText          string                 `protobuf:"bytes,3,opt,name=amend_text,json=amendText,proto3" json:"amend_text,omitempty"`
	CreateTime         int64                  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime         int64                  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CreateTimeMs       int64                  `protobuf:"varint,6,opt,name=create_time_ms,json=createTimeMs,proto3" json:"create_time_ms,omitempty"`
	UpdateTimeMs       int64                  `protobuf:"varint,7,opt,name=update_time_ms,json=updateTimeMs,proto3" json:"update_time_ms,omitempty"`
	Status             string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CurrencyPair       string                 `protobuf:"bytes,9,opt,name=currency_pair,json=currencyPair,proto3" json:"currency_pair,omitempty"`
	Type               string                 `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Account            string                 `protobuf:"bytes,11,opt,name=account,proto3" json:"account,omitempty"`
	Side               string                 `protobuf:"bytes,12,opt,name=side,proto3" json:"side,omitempty"`
	Amount             string                 `protobuf:"bytes,13,opt,name=amount,proto3" json:"amount,omitempty"`
	Price              string                 `protobuf:"bytes,14,opt,name=price,proto3" json:"price,omitempty"`
	TimeInForce        string                 `protobuf:"bytes,15,opt,name=time_in_force,json=timeInForce,proto3" json:"time_in_force,omitempty"`
	Iceberg            string                 `protobuf:"bytes,16,opt,name=iceberg,proto3" json:"iceberg,omitempty"`
	Left               string                 `protobuf:"bytes,17,opt,name=left,proto3" json:"left,omitempty"`
	FilledAmount       string                 `protobuf:"bytes,18,opt,name=filled_amount,json=filledAmount,proto3" json:"filled_amount,omitempty"`
	FillPrice          string                 `protobuf:"bytes,19,opt,name=fill_price,json=fillPrice,proto3" json:"fill_price,omitempty"`
	FilledTotal        string                 `protobuf:"bytes,20,opt,name=filled_total,json=filledTotal,proto3" json:"filled_total,omitempty"`
	AvgDealPrice       string                 `protobuf:"bytes,21,opt,name=avg_deal_price,json=avgDealPrice,proto3" json:"avg_deal_price,omitempty"`
	Fee                string                 `protobuf:"bytes,22,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency        string                 `protobuf:"bytes,23,opt,name=fee_currency,json=feeCurrency,proto3" json:"fee_currency,omitempty"`
	PointFee           string                 `protobuf:"bytes,24,opt,name=point_fee,json=pointFee,proto3" json:"point_fee,omitempty"`
	GtFee              string                 `protobuf:"bytes,25,opt,name=gt_fee,json=gtFee,proto3" json:"gt_fee,omitempty"`
	GtMakerFee         string                 `protobuf:"bytes,26,opt,name=gt_maker_fee,json=gtMakerFee,proto3" json:"gt_maker_fee,omitempty"`
	GtTakerFee         string                 `protobuf:"bytes,27,opt,name=gt_taker_fee,json=gtTakerFee,proto3" json:"gt_taker_fee,omitempty"`
	GtDiscount         bool                   `protobuf:"varint,28,opt,name=gt_discount,json=gtDiscount,proto3" json:"gt_discount,omitempty"`
	RebatedFee         string                 `protobuf:"bytes,29,opt,name=rebated_fee,json=rebatedFee,proto3" json:"rebated_fee,omitempty"`
	RebatedFeeCurrency string                 `protobuf:"bytes,30,opt,name=rebated_fee_currency,json=rebatedFeeCurrency,proto3" json:"rebated_fee_currency,omitempty"`
	FinishAs           string                 `protobuf:"bytes,31,opt,name=finish_as,json=finishAs,proto3" json:"finish_as,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_orders_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Order) GetAmendText() string {
	if x != nil {
		return x.AmendText
	}
	return ""
}

func (x *Order) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Order) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Order) GetCreateTimeMs() int64 {
	if x != nil {
		return x.CreateTimeMs
	}
	return 0
}

func (x *Order) GetUpdateTimeMs() int64 {
	if x != nil {
		return x.UpdateTimeMs
	}
	return 0
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetCurrencyPair() string {
	if x != nil {
		return x.CurrencyPair
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Order) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Order) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetTimeInForce() string {
	if x != nil {
		return x.TimeInForce
	}
	return ""
}

func (x *Order) GetIceberg() string {
	if x != nil {
		return x.Iceberg
	}
	return ""
}

func (x *Order) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *Order) GetFilledAmount() string {
	if x != nil {
		return x.FilledAmount
	}
	return ""
}

func (x *Order) GetFillPrice() string {
	if x != nil {
		return x.FillPrice
	}
	return ""
}

func (x *Order) GetFilledTotal() string {
	if x != nil {
		return x.FilledTotal
	}
	return ""
}

func (x *Order) GetAvgDealPrice() string {
	if x != nil {
		return x.AvgDealPrice
	}
	return ""
}

func (x *Order) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *Order) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *Order) GetPointFee() string {
	if x != nil {
		return x.PointFee
	}
	return ""
}

func (x *Order) GetGtFee() string {
	if x != nil {
		return x.GtFee
	}
	return ""
}

func (x *Order) GetGtMakerFee() string {
	if x != nil {
		return x.GtMakerFee
	}
	return ""
}

func (x *Order) GetGtTakerFee() string {
	if x != nil {
		return x.GtTakerFee
	}
	return ""
}

func (x *Order) GetGtDiscount() bool {
	if x != nil {
		return x.GtDiscount
	}
	return false
}

func (x *Order) GetRebatedFee() string {
	if x != nil {
		return x.RebatedFee
	}
	return ""
}

func (x *Order) GetRebatedFeeCurrency() string {
	if x != nil {
		return x.RebatedFeeCurrency
	}
	return ""
}

func (x *Order) GetFinishAs() string {
	if x != nil {
		return x.FinishAs
	}
	return ""
}

var File_orders_proto protoreflect.FileDescriptor

const file_orders_proto_rawDesc = "" +
	"\n" +
	"\forders.proto\"\xa2\a\n" +
	"\x05Order\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"amend_text\x18\x03 \x01(\tR\tamendText\x12\x1f\n" +
	"\vcreate_time\x18\x04 \x01(\x03R\n" +
	"createTime\x12\x1f\n" +
	"\vupdate_time\x18\x05 \x01(\x03R\n" +
	"updateTime\x12$\n" +
	"\x0ecreate_time_ms\x18\x06 \x01(\x03R\fcreateTimeMs\x12$\n" +
	"\x0eupdate_time_ms\x18\a \x01(\x03R\fupdateTimeMs\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12#\n" +
	"\rcurrency_pair\x18\t \x01(\tR\fcurrencyPair\x12\x12\n" +
	"\x04type\x18\n" +
	" \x01(\tR\x04type\x12\x18\n" +
	"\aaccount\x18\v \x01(\tR\aaccount\x12\x12\n" +
	"\x04side\x18\f \x01(\tR\x04side\x12\x16\n" +
	"\x06amount\x18\r \x01(\tR\x06amount\x12\x14\n" +
	"\x05price\x18\x0e \x01(\tR\x05price\x12\"\n" +
	"\rtime_in_force\x18\x0f \x01(\tR\vtimeInForce\x12\x18\n" +
	"\aiceberg\x18\x10 \x01(\tR\aiceberg\x12\x12\n" +
	"\x04left\x18\x11 \x01(\tR\x04left\x12#\n" +
	"\rfilled_amount\x18\x12 \x01(\tR\ffilledAmount\x12\x1d\n" +
	"\n" +
	"fill_price\x18\x13 \x01(\tR\tfillPrice\x12!\n" +
	"\ffilled_total\x18\x14 \x01(\tR\vfilledTotal\x12$\n" +
	"\x0eavg_deal_price\x18\x15 \x01(\tR\favgDealPrice\x12\x10\n" +
	"\x03fee\x18\x16 \x01(\tR\x03fee\x12!\n" +
	"\ffee_currency\x18\x17 \x01(\tR\vfeeCurrency\x12\x1b\n" +
	"\tpoint_fee\x18\x18 \x01(\tR\bpointFee\x12\x15\n" +
	"\x06gt_fee\x18\x19 \x01(\tR\x05gtFee\x12 \n" +
	"\fgt_maker_fee\x18\x1a \x01(\tR\n" +
	"gtMakerFee\x12 \n" +
	"\fgt_taker_fee\x18\x1b \x01(\tR\n" +
	"gtTakerFee\x12\x1f\n" +
	"\vgt_discount\x18\x1c \x01(\bR\n" +
	"gtDiscount\x12\x1f\n" +
	"\vrebated_fee\x18\x1d \x01(\tR\n" +
	"rebatedFee\x120\n" +
	"\x14rebated_fee_currency\x18\x1e \x01(\tR\x12rebatedFeeCurrency\x12\x1b\n" +
	"\tfinish_as\x18\x1f \x01(\tR\bfinishAsB!Z\x1fmykitex/kitex_gen/protobuf/coinb\x06proto3"

var (
	file_orders_proto_rawDescOnce sync.Once
	file_orders_proto_rawDescData []byte
)

func file_orders_proto_rawDescGZIP() []byte {
	file_orders_proto_rawDescOnce.Do(func() {
		file_orders_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orders_proto_rawDesc), len(file_orders_proto_rawDesc)))
	})
	return file_orders_proto_rawDescData
}

var file_orders_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_orders_proto_goTypes = []any{
	(*Order)(nil), // 0: Order
}
var file_orders_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_orders_proto_init() }
func file_orders_proto_init() {
	if File_orders_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orders_proto_rawDesc), len(file_orders_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orders_proto_goTypes,
		DependencyIndexes: file_orders_proto_depIdxs,
		MessageInfos:      file_orders_proto_msgTypes,
	}.Build()
	File_orders_proto = out.File
	file_orders_proto_goTypes = nil
	file_orders_proto_depIdxs = nil
}

var _ context.Context
