// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: orders.proto

package coin

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text               string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	AmendText          string `protobuf:"bytes,3,opt,name=amend_text,json=amendText,proto3" json:"amend_text,omitempty"`
	CreateTime         int64  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime         int64  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CreateTimeMs       int64  `protobuf:"varint,6,opt,name=create_time_ms,json=createTimeMs,proto3" json:"create_time_ms,omitempty"`
	UpdateTimeMs       int64  `protobuf:"varint,7,opt,name=update_time_ms,json=updateTimeMs,proto3" json:"update_time_ms,omitempty"`
	Status             string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CurrencyPair       string `protobuf:"bytes,9,opt,name=currency_pair,json=currencyPair,proto3" json:"currency_pair,omitempty"`
	Type               string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Account            string `protobuf:"bytes,11,opt,name=account,proto3" json:"account,omitempty"`
	Side               string `protobuf:"bytes,12,opt,name=side,proto3" json:"side,omitempty"`
	Amount             string `protobuf:"bytes,13,opt,name=amount,proto3" json:"amount,omitempty"`
	Price              string `protobuf:"bytes,14,opt,name=price,proto3" json:"price,omitempty"`
	TimeInForce        string `protobuf:"bytes,15,opt,name=time_in_force,json=timeInForce,proto3" json:"time_in_force,omitempty"`
	Iceberg            string `protobuf:"bytes,16,opt,name=iceberg,proto3" json:"iceberg,omitempty"`
	Left               string `protobuf:"bytes,17,opt,name=left,proto3" json:"left,omitempty"`
	FilledAmount       string `protobuf:"bytes,18,opt,name=filled_amount,json=filledAmount,proto3" json:"filled_amount,omitempty"`
	FillPrice          string `protobuf:"bytes,19,opt,name=fill_price,json=fillPrice,proto3" json:"fill_price,omitempty"`
	FilledTotal        string `protobuf:"bytes,20,opt,name=filled_total,json=filledTotal,proto3" json:"filled_total,omitempty"`
	AvgDealPrice       string `protobuf:"bytes,21,opt,name=avg_deal_price,json=avgDealPrice,proto3" json:"avg_deal_price,omitempty"`
	Fee                string `protobuf:"bytes,22,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeCurrency        string `protobuf:"bytes,23,opt,name=fee_currency,json=feeCurrency,proto3" json:"fee_currency,omitempty"`
	PointFee           string `protobuf:"bytes,24,opt,name=point_fee,json=pointFee,proto3" json:"point_fee,omitempty"`
	GtFee              string `protobuf:"bytes,25,opt,name=gt_fee,json=gtFee,proto3" json:"gt_fee,omitempty"`
	GtMakerFee         string `protobuf:"bytes,26,opt,name=gt_maker_fee,json=gtMakerFee,proto3" json:"gt_maker_fee,omitempty"`
	GtTakerFee         string `protobuf:"bytes,27,opt,name=gt_taker_fee,json=gtTakerFee,proto3" json:"gt_taker_fee,omitempty"`
	GtDiscount         bool   `protobuf:"varint,28,opt,name=gt_discount,json=gtDiscount,proto3" json:"gt_discount,omitempty"`
	RebatedFee         string `protobuf:"bytes,29,opt,name=rebated_fee,json=rebatedFee,proto3" json:"rebated_fee,omitempty"`
	RebatedFeeCurrency string `protobuf:"bytes,30,opt,name=rebated_fee_currency,json=rebatedFeeCurrency,proto3" json:"rebated_fee_currency,omitempty"`
	FinishAs           string `protobuf:"bytes,31,opt,name=finish_as,json=finishAs,proto3" json:"finish_as,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orders_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_orders_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_orders_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Order) GetAmendText() string {
	if x != nil {
		return x.AmendText
	}
	return ""
}

func (x *Order) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Order) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Order) GetCreateTimeMs() int64 {
	if x != nil {
		return x.CreateTimeMs
	}
	return 0
}

func (x *Order) GetUpdateTimeMs() int64 {
	if x != nil {
		return x.UpdateTimeMs
	}
	return 0
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetCurrencyPair() string {
	if x != nil {
		return x.CurrencyPair
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Order) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Order) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetTimeInForce() string {
	if x != nil {
		return x.TimeInForce
	}
	return ""
}

func (x *Order) GetIceberg() string {
	if x != nil {
		return x.Iceberg
	}
	return ""
}

func (x *Order) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *Order) GetFilledAmount() string {
	if x != nil {
		return x.FilledAmount
	}
	return ""
}

func (x *Order) GetFillPrice() string {
	if x != nil {
		return x.FillPrice
	}
	return ""
}

func (x *Order) GetFilledTotal() string {
	if x != nil {
		return x.FilledTotal
	}
	return ""
}

func (x *Order) GetAvgDealPrice() string {
	if x != nil {
		return x.AvgDealPrice
	}
	return ""
}

func (x *Order) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *Order) GetFeeCurrency() string {
	if x != nil {
		return x.FeeCurrency
	}
	return ""
}

func (x *Order) GetPointFee() string {
	if x != nil {
		return x.PointFee
	}
	return ""
}

func (x *Order) GetGtFee() string {
	if x != nil {
		return x.GtFee
	}
	return ""
}

func (x *Order) GetGtMakerFee() string {
	if x != nil {
		return x.GtMakerFee
	}
	return ""
}

func (x *Order) GetGtTakerFee() string {
	if x != nil {
		return x.GtTakerFee
	}
	return ""
}

func (x *Order) GetGtDiscount() bool {
	if x != nil {
		return x.GtDiscount
	}
	return false
}

func (x *Order) GetRebatedFee() string {
	if x != nil {
		return x.RebatedFee
	}
	return ""
}

func (x *Order) GetRebatedFeeCurrency() string {
	if x != nil {
		return x.RebatedFeeCurrency
	}
	return ""
}

func (x *Order) GetFinishAs() string {
	if x != nil {
		return x.FinishAs
	}
	return ""
}

var File_orders_proto protoreflect.FileDescriptor

var file_orders_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x07, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63,
	0x65, 0x62, 0x65, 0x72, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x65,
	0x62, 0x65, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x61, 0x76, 0x67, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x67, 0x44, 0x65, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x74, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x74, 0x46, 0x65, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x67, 0x74, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x67, 0x74, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x74, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x67, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x61, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x41, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x6d, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x2f, 0x6b,
	0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orders_proto_rawDescOnce sync.Once
	file_orders_proto_rawDescData = file_orders_proto_rawDesc
)

func file_orders_proto_rawDescGZIP() []byte {
	file_orders_proto_rawDescOnce.Do(func() {
		file_orders_proto_rawDescData = protoimpl.X.CompressGZIP(file_orders_proto_rawDescData)
	})
	return file_orders_proto_rawDescData
}

var file_orders_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_orders_proto_goTypes = []interface{}{
	(*Order)(nil), // 0: Order
}
var file_orders_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_orders_proto_init() }
func file_orders_proto_init() {
	if File_orders_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orders_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orders_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orders_proto_goTypes,
		DependencyIndexes: file_orders_proto_depIdxs,
		MessageInfos:      file_orders_proto_msgTypes,
	}.Build()
	File_orders_proto = out.File
	file_orders_proto_rawDesc = nil
	file_orders_proto_goTypes = nil
	file_orders_proto_depIdxs = nil
}

var _ context.Context
