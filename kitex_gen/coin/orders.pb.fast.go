// Code generated by Fastpb v0.0.2. DO NOT EDIT.

package coin

import (
	fmt "fmt"
	fastpb "github.com/cloudwego/fastpb"
)

var (
	_ = fmt.Errorf
	_ = fastpb.Skip
)

func (x *Order) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 4:
		offset, err = x.fastReadField4(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 5:
		offset, err = x.fastReadField5(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 6:
		offset, err = x.fastReadField6(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 7:
		offset, err = x.fastReadField7(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 8:
		offset, err = x.fastReadField8(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 9:
		offset, err = x.fastReadField9(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 10:
		offset, err = x.fastReadField10(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 11:
		offset, err = x.fastReadField11(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 12:
		offset, err = x.fastReadField12(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 13:
		offset, err = x.fastReadField13(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 14:
		offset, err = x.fastReadField14(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 15:
		offset, err = x.fastReadField15(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 16:
		offset, err = x.fastReadField16(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 17:
		offset, err = x.fastReadField17(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 18:
		offset, err = x.fastReadField18(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 19:
		offset, err = x.fastReadField19(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 20:
		offset, err = x.fastReadField20(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 21:
		offset, err = x.fastReadField21(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 22:
		offset, err = x.fastReadField22(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 23:
		offset, err = x.fastReadField23(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 24:
		offset, err = x.fastReadField24(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 25:
		offset, err = x.fastReadField25(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 26:
		offset, err = x.fastReadField26(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 27:
		offset, err = x.fastReadField27(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 28:
		offset, err = x.fastReadField28(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 29:
		offset, err = x.fastReadField29(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 30:
		offset, err = x.fastReadField30(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 31:
		offset, err = x.fastReadField31(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_Order[number], err)
}

func (x *Order) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Id, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Text, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.AmendText, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField4(buf []byte, _type int8) (offset int, err error) {
	x.CreateTime, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *Order) fastReadField5(buf []byte, _type int8) (offset int, err error) {
	x.UpdateTime, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *Order) fastReadField6(buf []byte, _type int8) (offset int, err error) {
	x.CreateTimeMs, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *Order) fastReadField7(buf []byte, _type int8) (offset int, err error) {
	x.UpdateTimeMs, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *Order) fastReadField8(buf []byte, _type int8) (offset int, err error) {
	x.Status, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField9(buf []byte, _type int8) (offset int, err error) {
	x.CurrencyPair, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField10(buf []byte, _type int8) (offset int, err error) {
	x.Type, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField11(buf []byte, _type int8) (offset int, err error) {
	x.Account, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField12(buf []byte, _type int8) (offset int, err error) {
	x.Side, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField13(buf []byte, _type int8) (offset int, err error) {
	x.Amount, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField14(buf []byte, _type int8) (offset int, err error) {
	x.Price, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField15(buf []byte, _type int8) (offset int, err error) {
	x.TimeInForce, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField16(buf []byte, _type int8) (offset int, err error) {
	x.Iceberg, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField17(buf []byte, _type int8) (offset int, err error) {
	x.Left, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField18(buf []byte, _type int8) (offset int, err error) {
	x.FilledAmount, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField19(buf []byte, _type int8) (offset int, err error) {
	x.FillPrice, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField20(buf []byte, _type int8) (offset int, err error) {
	x.FilledTotal, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField21(buf []byte, _type int8) (offset int, err error) {
	x.AvgDealPrice, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField22(buf []byte, _type int8) (offset int, err error) {
	x.Fee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField23(buf []byte, _type int8) (offset int, err error) {
	x.FeeCurrency, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField24(buf []byte, _type int8) (offset int, err error) {
	x.PointFee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField25(buf []byte, _type int8) (offset int, err error) {
	x.GtFee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField26(buf []byte, _type int8) (offset int, err error) {
	x.GtMakerFee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField27(buf []byte, _type int8) (offset int, err error) {
	x.GtTakerFee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField28(buf []byte, _type int8) (offset int, err error) {
	x.GtDiscount, offset, err = fastpb.ReadBool(buf, _type)
	return offset, err
}

func (x *Order) fastReadField29(buf []byte, _type int8) (offset int, err error) {
	x.RebatedFee, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField30(buf []byte, _type int8) (offset int, err error) {
	x.RebatedFeeCurrency, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) fastReadField31(buf []byte, _type int8) (offset int, err error) {
	x.FinishAs, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *Order) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	offset += x.fastWriteField4(buf[offset:])
	offset += x.fastWriteField5(buf[offset:])
	offset += x.fastWriteField6(buf[offset:])
	offset += x.fastWriteField7(buf[offset:])
	offset += x.fastWriteField8(buf[offset:])
	offset += x.fastWriteField9(buf[offset:])
	offset += x.fastWriteField10(buf[offset:])
	offset += x.fastWriteField11(buf[offset:])
	offset += x.fastWriteField12(buf[offset:])
	offset += x.fastWriteField13(buf[offset:])
	offset += x.fastWriteField14(buf[offset:])
	offset += x.fastWriteField15(buf[offset:])
	offset += x.fastWriteField16(buf[offset:])
	offset += x.fastWriteField17(buf[offset:])
	offset += x.fastWriteField18(buf[offset:])
	offset += x.fastWriteField19(buf[offset:])
	offset += x.fastWriteField20(buf[offset:])
	offset += x.fastWriteField21(buf[offset:])
	offset += x.fastWriteField22(buf[offset:])
	offset += x.fastWriteField23(buf[offset:])
	offset += x.fastWriteField24(buf[offset:])
	offset += x.fastWriteField25(buf[offset:])
	offset += x.fastWriteField26(buf[offset:])
	offset += x.fastWriteField27(buf[offset:])
	offset += x.fastWriteField28(buf[offset:])
	offset += x.fastWriteField29(buf[offset:])
	offset += x.fastWriteField30(buf[offset:])
	offset += x.fastWriteField31(buf[offset:])
	return offset
}

func (x *Order) fastWriteField1(buf []byte) (offset int) {
	if x.Id == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetId())
	return offset
}

func (x *Order) fastWriteField2(buf []byte) (offset int) {
	if x.Text == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetText())
	return offset
}

func (x *Order) fastWriteField3(buf []byte) (offset int) {
	if x.AmendText == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetAmendText())
	return offset
}

func (x *Order) fastWriteField4(buf []byte) (offset int) {
	if x.CreateTime == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 4, x.GetCreateTime())
	return offset
}

func (x *Order) fastWriteField5(buf []byte) (offset int) {
	if x.UpdateTime == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 5, x.GetUpdateTime())
	return offset
}

func (x *Order) fastWriteField6(buf []byte) (offset int) {
	if x.CreateTimeMs == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 6, x.GetCreateTimeMs())
	return offset
}

func (x *Order) fastWriteField7(buf []byte) (offset int) {
	if x.UpdateTimeMs == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 7, x.GetUpdateTimeMs())
	return offset
}

func (x *Order) fastWriteField8(buf []byte) (offset int) {
	if x.Status == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 8, x.GetStatus())
	return offset
}

func (x *Order) fastWriteField9(buf []byte) (offset int) {
	if x.CurrencyPair == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 9, x.GetCurrencyPair())
	return offset
}

func (x *Order) fastWriteField10(buf []byte) (offset int) {
	if x.Type == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 10, x.GetType())
	return offset
}

func (x *Order) fastWriteField11(buf []byte) (offset int) {
	if x.Account == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 11, x.GetAccount())
	return offset
}

func (x *Order) fastWriteField12(buf []byte) (offset int) {
	if x.Side == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 12, x.GetSide())
	return offset
}

func (x *Order) fastWriteField13(buf []byte) (offset int) {
	if x.Amount == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 13, x.GetAmount())
	return offset
}

func (x *Order) fastWriteField14(buf []byte) (offset int) {
	if x.Price == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 14, x.GetPrice())
	return offset
}

func (x *Order) fastWriteField15(buf []byte) (offset int) {
	if x.TimeInForce == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 15, x.GetTimeInForce())
	return offset
}

func (x *Order) fastWriteField16(buf []byte) (offset int) {
	if x.Iceberg == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 16, x.GetIceberg())
	return offset
}

func (x *Order) fastWriteField17(buf []byte) (offset int) {
	if x.Left == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 17, x.GetLeft())
	return offset
}

func (x *Order) fastWriteField18(buf []byte) (offset int) {
	if x.FilledAmount == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 18, x.GetFilledAmount())
	return offset
}

func (x *Order) fastWriteField19(buf []byte) (offset int) {
	if x.FillPrice == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 19, x.GetFillPrice())
	return offset
}

func (x *Order) fastWriteField20(buf []byte) (offset int) {
	if x.FilledTotal == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 20, x.GetFilledTotal())
	return offset
}

func (x *Order) fastWriteField21(buf []byte) (offset int) {
	if x.AvgDealPrice == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 21, x.GetAvgDealPrice())
	return offset
}

func (x *Order) fastWriteField22(buf []byte) (offset int) {
	if x.Fee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 22, x.GetFee())
	return offset
}

func (x *Order) fastWriteField23(buf []byte) (offset int) {
	if x.FeeCurrency == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 23, x.GetFeeCurrency())
	return offset
}

func (x *Order) fastWriteField24(buf []byte) (offset int) {
	if x.PointFee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 24, x.GetPointFee())
	return offset
}

func (x *Order) fastWriteField25(buf []byte) (offset int) {
	if x.GtFee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 25, x.GetGtFee())
	return offset
}

func (x *Order) fastWriteField26(buf []byte) (offset int) {
	if x.GtMakerFee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 26, x.GetGtMakerFee())
	return offset
}

func (x *Order) fastWriteField27(buf []byte) (offset int) {
	if x.GtTakerFee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 27, x.GetGtTakerFee())
	return offset
}

func (x *Order) fastWriteField28(buf []byte) (offset int) {
	if !x.GtDiscount {
		return offset
	}
	offset += fastpb.WriteBool(buf[offset:], 28, x.GetGtDiscount())
	return offset
}

func (x *Order) fastWriteField29(buf []byte) (offset int) {
	if x.RebatedFee == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 29, x.GetRebatedFee())
	return offset
}

func (x *Order) fastWriteField30(buf []byte) (offset int) {
	if x.RebatedFeeCurrency == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 30, x.GetRebatedFeeCurrency())
	return offset
}

func (x *Order) fastWriteField31(buf []byte) (offset int) {
	if x.FinishAs == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 31, x.GetFinishAs())
	return offset
}

func (x *Order) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	n += x.sizeField4()
	n += x.sizeField5()
	n += x.sizeField6()
	n += x.sizeField7()
	n += x.sizeField8()
	n += x.sizeField9()
	n += x.sizeField10()
	n += x.sizeField11()
	n += x.sizeField12()
	n += x.sizeField13()
	n += x.sizeField14()
	n += x.sizeField15()
	n += x.sizeField16()
	n += x.sizeField17()
	n += x.sizeField18()
	n += x.sizeField19()
	n += x.sizeField20()
	n += x.sizeField21()
	n += x.sizeField22()
	n += x.sizeField23()
	n += x.sizeField24()
	n += x.sizeField25()
	n += x.sizeField26()
	n += x.sizeField27()
	n += x.sizeField28()
	n += x.sizeField29()
	n += x.sizeField30()
	n += x.sizeField31()
	return n
}

func (x *Order) sizeField1() (n int) {
	if x.Id == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetId())
	return n
}

func (x *Order) sizeField2() (n int) {
	if x.Text == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetText())
	return n
}

func (x *Order) sizeField3() (n int) {
	if x.AmendText == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetAmendText())
	return n
}

func (x *Order) sizeField4() (n int) {
	if x.CreateTime == 0 {
		return n
	}
	n += fastpb.SizeInt64(4, x.GetCreateTime())
	return n
}

func (x *Order) sizeField5() (n int) {
	if x.UpdateTime == 0 {
		return n
	}
	n += fastpb.SizeInt64(5, x.GetUpdateTime())
	return n
}

func (x *Order) sizeField6() (n int) {
	if x.CreateTimeMs == 0 {
		return n
	}
	n += fastpb.SizeInt64(6, x.GetCreateTimeMs())
	return n
}

func (x *Order) sizeField7() (n int) {
	if x.UpdateTimeMs == 0 {
		return n
	}
	n += fastpb.SizeInt64(7, x.GetUpdateTimeMs())
	return n
}

func (x *Order) sizeField8() (n int) {
	if x.Status == "" {
		return n
	}
	n += fastpb.SizeString(8, x.GetStatus())
	return n
}

func (x *Order) sizeField9() (n int) {
	if x.CurrencyPair == "" {
		return n
	}
	n += fastpb.SizeString(9, x.GetCurrencyPair())
	return n
}

func (x *Order) sizeField10() (n int) {
	if x.Type == "" {
		return n
	}
	n += fastpb.SizeString(10, x.GetType())
	return n
}

func (x *Order) sizeField11() (n int) {
	if x.Account == "" {
		return n
	}
	n += fastpb.SizeString(11, x.GetAccount())
	return n
}

func (x *Order) sizeField12() (n int) {
	if x.Side == "" {
		return n
	}
	n += fastpb.SizeString(12, x.GetSide())
	return n
}

func (x *Order) sizeField13() (n int) {
	if x.Amount == "" {
		return n
	}
	n += fastpb.SizeString(13, x.GetAmount())
	return n
}

func (x *Order) sizeField14() (n int) {
	if x.Price == "" {
		return n
	}
	n += fastpb.SizeString(14, x.GetPrice())
	return n
}

func (x *Order) sizeField15() (n int) {
	if x.TimeInForce == "" {
		return n
	}
	n += fastpb.SizeString(15, x.GetTimeInForce())
	return n
}

func (x *Order) sizeField16() (n int) {
	if x.Iceberg == "" {
		return n
	}
	n += fastpb.SizeString(16, x.GetIceberg())
	return n
}

func (x *Order) sizeField17() (n int) {
	if x.Left == "" {
		return n
	}
	n += fastpb.SizeString(17, x.GetLeft())
	return n
}

func (x *Order) sizeField18() (n int) {
	if x.FilledAmount == "" {
		return n
	}
	n += fastpb.SizeString(18, x.GetFilledAmount())
	return n
}

func (x *Order) sizeField19() (n int) {
	if x.FillPrice == "" {
		return n
	}
	n += fastpb.SizeString(19, x.GetFillPrice())
	return n
}

func (x *Order) sizeField20() (n int) {
	if x.FilledTotal == "" {
		return n
	}
	n += fastpb.SizeString(20, x.GetFilledTotal())
	return n
}

func (x *Order) sizeField21() (n int) {
	if x.AvgDealPrice == "" {
		return n
	}
	n += fastpb.SizeString(21, x.GetAvgDealPrice())
	return n
}

func (x *Order) sizeField22() (n int) {
	if x.Fee == "" {
		return n
	}
	n += fastpb.SizeString(22, x.GetFee())
	return n
}

func (x *Order) sizeField23() (n int) {
	if x.FeeCurrency == "" {
		return n
	}
	n += fastpb.SizeString(23, x.GetFeeCurrency())
	return n
}

func (x *Order) sizeField24() (n int) {
	if x.PointFee == "" {
		return n
	}
	n += fastpb.SizeString(24, x.GetPointFee())
	return n
}

func (x *Order) sizeField25() (n int) {
	if x.GtFee == "" {
		return n
	}
	n += fastpb.SizeString(25, x.GetGtFee())
	return n
}

func (x *Order) sizeField26() (n int) {
	if x.GtMakerFee == "" {
		return n
	}
	n += fastpb.SizeString(26, x.GetGtMakerFee())
	return n
}

func (x *Order) sizeField27() (n int) {
	if x.GtTakerFee == "" {
		return n
	}
	n += fastpb.SizeString(27, x.GetGtTakerFee())
	return n
}

func (x *Order) sizeField28() (n int) {
	if !x.GtDiscount {
		return n
	}
	n += fastpb.SizeBool(28, x.GetGtDiscount())
	return n
}

func (x *Order) sizeField29() (n int) {
	if x.RebatedFee == "" {
		return n
	}
	n += fastpb.SizeString(29, x.GetRebatedFee())
	return n
}

func (x *Order) sizeField30() (n int) {
	if x.RebatedFeeCurrency == "" {
		return n
	}
	n += fastpb.SizeString(30, x.GetRebatedFeeCurrency())
	return n
}

func (x *Order) sizeField31() (n int) {
	if x.FinishAs == "" {
		return n
	}
	n += fastpb.SizeString(31, x.GetFinishAs())
	return n
}

var fieldIDToName_Order = map[int32]string{
	1:  "Id",
	2:  "Text",
	3:  "AmendText",
	4:  "CreateTime",
	5:  "UpdateTime",
	6:  "CreateTimeMs",
	7:  "UpdateTimeMs",
	8:  "Status",
	9:  "CurrencyPair",
	10: "Type",
	11: "Account",
	12: "Side",
	13: "Amount",
	14: "Price",
	15: "TimeInForce",
	16: "Iceberg",
	17: "Left",
	18: "FilledAmount",
	19: "FillPrice",
	20: "FilledTotal",
	21: "AvgDealPrice",
	22: "Fee",
	23: "FeeCurrency",
	24: "PointFee",
	25: "GtFee",
	26: "GtMakerFee",
	27: "GtTakerFee",
	28: "GtDiscount",
	29: "RebatedFee",
	30: "RebatedFeeCurrency",
	31: "FinishAs",
}
